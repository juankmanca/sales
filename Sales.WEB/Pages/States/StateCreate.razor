@page "/states/create/{CountryId:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
@attribute [Authorize(Roles = "Admin")]

<h3>Crear Pais</h3>

<StateForm @ref="statesForm" State="state" OnValidSubmit="Create" ReturnAction="Return" />

@code {
    private State state = new();
    private StateForm? statesForm;

    [Parameter]
    public int CountryId { get; set; }

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;

    private async Task Create()
    {
        state.CountryId = CountryId;
        var httpResponse = await repository.Post("api/states", state);
        if (httpResponse.Error)
        {
            var message = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        await BlazoredModal.CloseAsync(ModalResult.Ok());
        Return();
    }

    private void Return()
    {
        statesForm!.postedSuccessfully = true;
        navigationManager.NavigateTo($"/countries/details/{CountryId}");
    }
}
